<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gubang.mapper.DictMapper">
	<resultMap id="BaseResultMap" type="com.gubang.entity.Dict">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="value" property="value" jdbcType="VARCHAR" />
		<result column="parent_id" property="parentId" jdbcType="VARCHAR" />
		<result column="remarks" property="remarks" jdbcType="VARCHAR" />
		<result column="is_del" property="isDel" jdbcType="VARCHAR" />
		<result column="create_by" property="createBy" jdbcType="VARCHAR" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="update_by" property="updateBy" jdbcType="VARCHAR" />
		<result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
	</resultMap>

	<sql id="Base_Column_List">
		td.id,
		td.code,
		td.value,
		td.parent_id,
		td.remarks,
		td.is_del,
		td.create_by,
		td.create_date,
		td.update_by,
		td.update_date
	</sql>

	<insert id="addDict" parameterType="com.gubang.entity.Dict">
		insert into t_dict_tree
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test='id != null and id != ""'>
				id,
			</if>
			<if test='code != null and code != ""'>
				code,
			</if>
			<if test='value != null and value != ""'>
				value,
			</if>
			<if test='parentId != null and parentId != ""'>
				parent_id,
			</if>
			<if test='remarks != null and remarks != ""'>
				remarks,
			</if>
			<if test='createBy != null and createBy != ""'>
				create_by,
			</if>
			<if test='createDate != null'>
				create_date,
			</if>
			<if test='updateBy != null and updateBy != ""'>
				update_by,
			</if>
			<if test='updateDate != null'>
				update_date,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test='id != null and id != ""'>
				#{id,jdbcType=VARCHAR},
			</if>
			<if test='code != null and code != ""'>
				#{code,jdbcType=VARCHAR},
			</if>
			<if test='value != null and value != ""'>
				#{value,jdbcType=VARCHAR},
			</if>
			<if test='parentId != null and parentId != ""'>
				#{parentId,jdbcType=VARCHAR},
			</if>
			<if test='remarks != null and remarks != ""'>
				#{remarks,jdbcType=VARCHAR},
			</if>
			<if test='createBy != null and createBy != ""'>
				#{createBy,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test='updateBy != null and updateBy != ""'>
				#{updateBy,jdbcType=VARCHAR},
			</if>
			<if test="updateDate != null">
				#{updateDate,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="editDict" parameterType="com.gubang.entity.Dict">
		update
		t_dict_tree td
		<set>
			<if test='code != null and code != ""'>
				td.code = #{code,jdbcType=VARCHAR},
			</if>
			<if test='value != null and value != ""'>
				td.value = #{value,jdbcType=VARCHAR},
			</if>
			<if test='remarks != null'>
				td.remarks = #{remarks,jdbcType=VARCHAR},
			</if>
			<if test='isDel != null and isDel != ""'>
				td.is_del = #{isDel,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>

	<select id="getDict" resultMap="BaseResultMap" parameterType="com.gubang.entity.Dict">
		select
		<include refid="Base_Column_List" />		
		from
		t_dict_tree td
		<where>
			<if test='code != null and code != ""'>
				and (
					td.code like concat('%',#{code,jdbcType=VARCHAR},'%')
					OR
				 	td.parent_id in (
							select
									td.id
							FROM
									t_dict_tree td
							WHERE
								td.code like concat('%',#{code,jdbcType=VARCHAR},'%')
						)
					)
					
			</if>
			<if test='value != null and value != ""'>
				and td.value like
				concat('%',#{value,jdbcType=VARCHAR},'%')
			</if>
			<if test='isDel != null and isDel != ""'>
				and td.is_del = #{isDel,jdbcType=VARCHAR}
			</if>
		</where>
		order by
		td.parent_id,td.id,td.update_date
	</select>
	
	<select id="getDictList" resultMap="BaseResultMap" parameterType="com.common.dto.DictDto">
		select
		<include refid="Base_Column_List" />		
		from
		t_dict_tree td
		<where>
			<if test='code != null and code != ""'>
				and td.parent_id = (
					select 
						 trf.id
					from 
						t_dict_tree trf
					where
						trf.code = #{code,jdbcType=VARCHAR}
				)
			</if>
		</where>
		order by
		td.parent_id,td.id,td.update_date
	</select>
</mapper>